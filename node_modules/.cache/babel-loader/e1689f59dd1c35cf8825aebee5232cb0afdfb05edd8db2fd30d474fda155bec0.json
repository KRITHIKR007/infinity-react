{"ast":null,"code":"var _jsxFileName = \"D:\\\\infinity-react\\\\src\\\\components\\\\HeroBackground.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './HeroBackground.css';\nimport heroBackground from '../assets/hero-bg'; // Import the background helper\n\n// Define Particle class outside component to avoid re-creation on each render\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Particle {\n  constructor(canvasWidth, canvasHeight) {\n    this.x = void 0;\n    this.y = void 0;\n    this.size = void 0;\n    this.speedX = void 0;\n    this.speedY = void 0;\n    this.color = void 0;\n    this.maxWidth = void 0;\n    this.maxHeight = void 0;\n    this.maxWidth = canvasWidth;\n    this.maxHeight = canvasHeight;\n    this.x = Math.random() * canvasWidth;\n    this.y = Math.random() * canvasHeight;\n    this.size = Math.random() * 3 + 1;\n    this.speedX = (Math.random() - 0.5) * 0.5;\n    this.speedY = (Math.random() - 0.5) * 0.5;\n\n    // Create a more vibrant purple/violet gradient palette\n    const colors = ['rgba(157, 78, 221, 0.8)',\n    // Primary purple - more opaque\n    'rgba(120, 60, 180, 0.7)',\n    // Darker purple\n    'rgba(180, 100, 240, 0.6)',\n    // Lighter purple\n    'rgba(200, 120, 255, 0.5)' // Violet\n    ];\n    this.color = colors[Math.floor(Math.random() * colors.length)];\n  }\n  update() {\n    this.x += this.speedX;\n    this.y += this.speedY;\n\n    // Bounce off edges\n    if (this.x > this.maxWidth || this.x < 0) this.speedX = -this.speedX;\n    if (this.y > this.maxHeight || this.y < 0) this.speedY = -this.speedY;\n  }\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nconst HeroBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size with high resolution for retina displays\n    const updateSize = () => {\n      const dpr = window.devicePixelRatio || 1;\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      ctx.scale(dpr, dpr);\n\n      // Reset styles after resize\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n    };\n    updateSize();\n    window.addEventListener('resize', updateSize);\n\n    // Mouse interaction\n    const mouse = {\n      x: undefined,\n      y: undefined,\n      radius: 150 // Mouse influence radius\n    };\n    canvas.addEventListener('mousemove', function (e) {\n      const rect = canvas.getBoundingClientRect();\n      mouse.x = e.clientX - rect.left;\n      mouse.y = e.clientY - rect.top;\n    });\n    canvas.addEventListener('mouseleave', function () {\n      mouse.x = undefined;\n      mouse.y = undefined;\n    });\n\n    // Now that we have canvas dimensions, create particles\n    const particles = [];\n    const particleCount = Math.min(120, Math.floor(canvas.width / 8));\n    for (let i = 0; i < particleCount; i++) {\n      // Pass canvas dimensions to Particle constructor\n      particles.push(new Particle(canvas.width, canvas.height));\n    }\n\n    // Connect particles with lines if they're close enough\n    const connectParticles = () => {\n      const maxDistance = 120;\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < maxDistance) {\n            // Create a gradient for the connection line\n            const opacity = 0.2 * (1 - distance / maxDistance);\n            ctx.beginPath();\n            ctx.strokeStyle = `rgba(157, 78, 221, ${opacity})`;\n            ctx.lineWidth = 0.8;\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        }\n      }\n    };\n\n    // Animation loop\n    let animationId;\n    const animate = () => {\n      // Clear canvas with a slight fade effect for smoother animation\n      ctx.fillStyle = 'rgba(16, 0, 43, 0.2)'; // Dark background with opacity for trail effect\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw subtle grid pattern\n      ctx.lineWidth = 0.3;\n      ctx.strokeStyle = 'rgba(157, 78, 221, 0.1)';\n\n      // Vertical lines - more spaced out for cleaner look\n      for (let x = 0; x <= canvas.width; x += 50) {\n        ctx.beginPath();\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x, canvas.height);\n        ctx.stroke();\n      }\n\n      // Horizontal lines\n      for (let y = 0; y <= canvas.height; y += 50) {\n        ctx.beginPath();\n        ctx.moveTo(0, y);\n        ctx.lineTo(canvas.width, y);\n        ctx.stroke();\n      }\n\n      // Update and draw particles\n      for (let i = 0; i < particles.length; i++) {\n        // Add mouse interaction\n        if (mouse.x !== undefined && mouse.y !== undefined) {\n          const dx = particles[i].x - mouse.x;\n          const dy = particles[i].y - mouse.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          // Particles flee from mouse\n          if (distance < mouse.radius) {\n            const angle = Math.atan2(dy, dx);\n            const forceX = Math.cos(angle) * 0.5;\n            const forceY = Math.sin(angle) * 0.5;\n            particles[i].x += forceX;\n            particles[i].y += forceY;\n          }\n        }\n        particles[i].update();\n        particles[i].draw(ctx);\n      }\n      connectParticles();\n      animationId = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', updateSize);\n      canvas.removeEventListener('mousemove', function () {});\n      canvas.removeEventListener('mouseleave', function () {});\n      cancelAnimationFrame(animationId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-background-container\",\n    style: {\n      backgroundImage: `url(${heroBackground})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-orbs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orb orb1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orb orb2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orb orb3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"hero-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-gradient-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-glow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = HeroBackground;\nexport default HeroBackground;\nvar _c;\n$RefreshReg$(_c, \"HeroBackground\");","map":{"version":3,"names":["React","useEffect","useRef","heroBackground","jsxDEV","_jsxDEV","Particle","constructor","canvasWidth","canvasHeight","x","y","size","speedX","speedY","color","maxWidth","maxHeight","Math","random","colors","floor","length","update","draw","ctx","fillStyle","beginPath","arc","PI","fill","HeroBackground","_s","canvasRef","canvas","current","getContext","updateSize","dpr","window","devicePixelRatio","rect","getBoundingClientRect","width","height","scale","style","addEventListener","mouse","undefined","radius","e","clientX","left","clientY","top","particles","particleCount","min","i","push","connectParticles","maxDistance","j","dx","dy","distance","sqrt","opacity","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","animationId","animate","fillRect","angle","atan2","forceX","cos","forceY","sin","requestAnimationFrame","removeEventListener","cancelAnimationFrame","className","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/infinity-react/src/components/HeroBackground.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './HeroBackground.css';\r\nimport heroBackground from '../assets/hero-bg'; // Import the background helper\r\n\r\n// Define Particle class outside component to avoid re-creation on each render\r\nclass Particle {\r\n  x: number;\r\n  y: number;\r\n  size: number;\r\n  speedX: number;\r\n  speedY: number;\r\n  color: string;\r\n  maxWidth: number;\r\n  maxHeight: number;\r\n  \r\n  constructor(canvasWidth: number, canvasHeight: number) {\r\n    this.maxWidth = canvasWidth;\r\n    this.maxHeight = canvasHeight;\r\n    this.x = Math.random() * canvasWidth;\r\n    this.y = Math.random() * canvasHeight;\r\n    this.size = Math.random() * 3 + 1;\r\n    this.speedX = (Math.random() - 0.5) * 0.5;\r\n    this.speedY = (Math.random() - 0.5) * 0.5;\r\n    \r\n    // Create a more vibrant purple/violet gradient palette\r\n    const colors = [\r\n      'rgba(157, 78, 221, 0.8)',  // Primary purple - more opaque\r\n      'rgba(120, 60, 180, 0.7)',  // Darker purple\r\n      'rgba(180, 100, 240, 0.6)', // Lighter purple\r\n      'rgba(200, 120, 255, 0.5)'  // Violet\r\n    ];\r\n    this.color = colors[Math.floor(Math.random() * colors.length)];\r\n  }\r\n  \r\n  update() {\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n    \r\n    // Bounce off edges\r\n    if (this.x > this.maxWidth || this.x < 0) this.speedX = -this.speedX;\r\n    if (this.y > this.maxHeight || this.y < 0) this.speedY = -this.speedY;\r\n  }\r\n  \r\n  draw(ctx: CanvasRenderingContext2D) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nconst HeroBackground: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    // Set canvas size with high resolution for retina displays\r\n    const updateSize = () => {\r\n      const dpr = window.devicePixelRatio || 1;\r\n      const rect = canvas.getBoundingClientRect();\r\n      canvas.width = rect.width * dpr;\r\n      canvas.height = rect.height * dpr;\r\n      ctx.scale(dpr, dpr);\r\n      \r\n      // Reset styles after resize\r\n      canvas.style.width = `${rect.width}px`;\r\n      canvas.style.height = `${rect.height}px`;\r\n    };\r\n    \r\n    updateSize();\r\n    window.addEventListener('resize', updateSize);\r\n    \r\n    // Mouse interaction\r\n    const mouse = {\r\n      x: undefined as number | undefined,\r\n      y: undefined as number | undefined,\r\n      radius: 150 // Mouse influence radius\r\n    };\r\n    \r\n    canvas.addEventListener('mousemove', function(e) {\r\n      const rect = canvas.getBoundingClientRect();\r\n      mouse.x = e.clientX - rect.left;\r\n      mouse.y = e.clientY - rect.top;\r\n    });\r\n    \r\n    canvas.addEventListener('mouseleave', function() {\r\n      mouse.x = undefined;\r\n      mouse.y = undefined;\r\n    });\r\n    \r\n    // Now that we have canvas dimensions, create particles\r\n    const particles: Particle[] = [];\r\n    const particleCount = Math.min(120, Math.floor(canvas.width / 8));\r\n    \r\n    for (let i = 0; i < particleCount; i++) {\r\n      // Pass canvas dimensions to Particle constructor\r\n      particles.push(new Particle(canvas.width, canvas.height));\r\n    }\r\n    \r\n    // Connect particles with lines if they're close enough\r\n    const connectParticles = () => {\r\n      const maxDistance = 120;\r\n      \r\n      for (let i = 0; i < particles.length; i++) {\r\n        for (let j = i + 1; j < particles.length; j++) {\r\n          const dx = particles[i].x - particles[j].x;\r\n          const dy = particles[i].y - particles[j].y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          if (distance < maxDistance) {\r\n            // Create a gradient for the connection line\r\n            const opacity = 0.2 * (1 - distance / maxDistance);\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = `rgba(157, 78, 221, ${opacity})`;\r\n            ctx.lineWidth = 0.8;\r\n            ctx.moveTo(particles[i].x, particles[i].y);\r\n            ctx.lineTo(particles[j].x, particles[j].y);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n          }\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Animation loop\r\n    let animationId: number;\r\n    const animate = () => {\r\n      // Clear canvas with a slight fade effect for smoother animation\r\n      ctx.fillStyle = 'rgba(16, 0, 43, 0.2)'; // Dark background with opacity for trail effect\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      // Draw subtle grid pattern\r\n      ctx.lineWidth = 0.3;\r\n      ctx.strokeStyle = 'rgba(157, 78, 221, 0.1)';\r\n      \r\n      // Vertical lines - more spaced out for cleaner look\r\n      for (let x = 0; x <= canvas.width; x += 50) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, 0);\r\n        ctx.lineTo(x, canvas.height);\r\n        ctx.stroke();\r\n      }\r\n      \r\n      // Horizontal lines\r\n      for (let y = 0; y <= canvas.height; y += 50) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, y);\r\n        ctx.lineTo(canvas.width, y);\r\n        ctx.stroke();\r\n      }\r\n      \r\n      // Update and draw particles\r\n      for (let i = 0; i < particles.length; i++) {\r\n        // Add mouse interaction\r\n        if (mouse.x !== undefined && mouse.y !== undefined) {\r\n          const dx = particles[i].x - mouse.x;\r\n          const dy = particles[i].y - mouse.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          \r\n          // Particles flee from mouse\r\n          if (distance < mouse.radius) {\r\n            const angle = Math.atan2(dy, dx);\r\n            const forceX = Math.cos(angle) * 0.5;\r\n            const forceY = Math.sin(angle) * 0.5;\r\n            \r\n            particles[i].x += forceX;\r\n            particles[i].y += forceY;\r\n          }\r\n        }\r\n        \r\n        particles[i].update();\r\n        particles[i].draw(ctx);\r\n      }\r\n      \r\n      connectParticles();\r\n      \r\n      animationId = requestAnimationFrame(animate);\r\n    };\r\n    \r\n    animate();\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', updateSize);\r\n      canvas.removeEventListener('mousemove', function() {});\r\n      canvas.removeEventListener('mouseleave', function() {});\r\n      cancelAnimationFrame(animationId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      className=\"hero-background-container\"\r\n      style={{ backgroundImage: `url(${heroBackground})` }}\r\n    >\r\n      <div className=\"hero-orbs\">\r\n        <div className=\"orb orb1\"></div>\r\n        <div className=\"orb orb2\"></div>\r\n        <div className=\"orb orb3\"></div>\r\n      </div>\r\n      <canvas ref={canvasRef} className=\"hero-canvas\"></canvas>\r\n      <div className=\"hero-gradient-overlay\"></div>\r\n      <div className=\"hero-glow\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroBackground;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}