{"ast":null,"code":"var _jsxFileName = \"D:\\\\infinity-react\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  redirectPath = '/admin-login'\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n  useEffect(() => {\n    // More reliable authentication check\n    const authStatus = localStorage.getItem('isAuthenticated') === 'true';\n    console.log(\"Auth check result:\", authStatus);\n    setIsAuthenticated(authStatus);\n    setIsLoading(false);\n\n    // Add event listener for storage changes (in case auth changes in another tab)\n    const handleStorageChange = e => {\n      if (e.key === 'isAuthenticated') {\n        setIsAuthenticated(e.newValue === 'true');\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Show loading indicator while checking authentication\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-loading\",\n      children: \"Checking authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login page if not authenticated\n  if (!isAuthenticated) {\n    console.log(\"Not authenticated, redirecting to:\", redirectPath);\n    // Pass the current location so we can redirect back after login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render children if authenticated\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"7Akv3P4XCBDtgSu2pTApYklHXiM=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","redirectPath","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","location","authStatus","localStorage","getItem","console","log","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["D:/infinity-react/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  redirectPath?: string;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  redirectPath = '/admin-login' \r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    // More reliable authentication check\r\n    const authStatus = localStorage.getItem('isAuthenticated') === 'true';\r\n    console.log(\"Auth check result:\", authStatus);\r\n    setIsAuthenticated(authStatus);\r\n    setIsLoading(false);\r\n    \r\n    // Add event listener for storage changes (in case auth changes in another tab)\r\n    const handleStorageChange = (e: StorageEvent) => {\r\n      if (e.key === 'isAuthenticated') {\r\n        setIsAuthenticated(e.newValue === 'true');\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n  \r\n  // Show loading indicator while checking authentication\r\n  if (isLoading) {\r\n    return <div className=\"admin-loading\">Checking authentication...</div>;\r\n  }\r\n  \r\n  // Redirect to login page if not authenticated\r\n  if (!isAuthenticated) {\r\n    console.log(\"Not authenticated, redirecting to:\", redirectPath);\r\n    // Pass the current location so we can redirect back after login\r\n    return <Navigate to={redirectPath} state={{ from: location }} replace />;\r\n  }\r\n  \r\n  // Render children if authenticated\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOzD,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,QAAQ;EACRC,YAAY,GAAG;AACjB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAiB,IAAI,CAAC;EAC5E,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;IACrEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,UAAU,CAAC;IAC7CJ,kBAAkB,CAACI,UAAU,CAAC;IAC9BF,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACA,MAAMO,mBAAmB,GAAIC,CAAe,IAAK;MAC/C,IAAIA,CAAC,CAACC,GAAG,KAAK,iBAAiB,EAAE;QAC/BX,kBAAkB,CAACU,CAAC,CAACE,QAAQ,KAAK,MAAM,CAAC;MAC3C;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;IACvD,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,mBAAmB,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIR,SAAS,EAAE;IACb,oBAAOT,OAAA;MAAKwB,SAAS,EAAC,eAAe;MAAApB,QAAA,EAAC;IAA0B;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxE;;EAEA;EACA,IAAI,CAACrB,eAAe,EAAE;IACpBQ,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEX,YAAY,CAAC;IAC/D;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAACgC,EAAE,EAAExB,YAAa;MAACyB,KAAK,EAAE;QAAEC,IAAI,EAAEpB;MAAS,CAAE;MAACqB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;;EAEA;EACA,oBAAO5B,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CAxCIH,cAA6C;EAAA,QAMhCL,WAAW;AAAA;AAAAmC,EAAA,GANxB9B,cAA6C;AA0CnD,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}