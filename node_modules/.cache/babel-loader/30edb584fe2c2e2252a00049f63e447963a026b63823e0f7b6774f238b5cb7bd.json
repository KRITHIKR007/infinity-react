{"ast":null,"code":"var _jsxFileName = \"D:\\\\infinity-react\\\\src\\\\contexts\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultContext = {\n  darkMode: true,\n  toggleDarkMode: () => {}\n};\nconst ThemeContext = /*#__PURE__*/createContext(defaultContext);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    document.body.classList.toggle('light-mode');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"U9cQrERlY+h8pHe8i/lj95QawrI=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","defaultContext","darkMode","toggleDarkMode","ThemeContext","ThemeProvider","children","_s","setDarkMode","document","body","classList","toggle","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["D:/infinity-react/src/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\n\r\ntype ThemeContextType = {\r\n  darkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n};\r\n\r\nconst defaultContext: ThemeContextType = {\r\n  darkMode: true,\r\n  toggleDarkMode: () => {}\r\n};\r\n\r\nconst ThemeContext = createContext<ThemeContextType>(defaultContext);\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [darkMode, setDarkMode] = useState(true);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n    document.body.classList.toggle('light-mode');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9E,MAAMC,cAAgC,GAAG;EACvCC,QAAQ,EAAE,IAAI;EACdC,cAAc,EAAEA,CAAA,KAAM,CAAC;AACzB,CAAC;AAED,MAAMC,YAAY,gBAAGR,aAAa,CAAmBK,cAAc,CAAC;AAMpE,OAAO,MAAMI,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACL,QAAQ,EAAEM,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3BK,WAAW,CAAC,CAACN,QAAQ,CAAC;IACtBO,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;EAC9C,CAAC;EAED,oBACEZ,OAAA,CAACI,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEZ,QAAQ;MAAEC;IAAe,CAAE;IAAAG,QAAA,EACxDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACX,EAAA,CAbWF,aAA2C;AAAAc,EAAA,GAA3Cd,aAA2C;AAexD,OAAO,MAAMe,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACM,YAAY,CAAC;AAAA;AAACiB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}