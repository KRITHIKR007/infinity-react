{"ast":null,"code":"var _jsxFileName = \"D:\\\\infinity-react\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  redirectPath = '/admin-login'\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check authentication status from localStorage\n    const authStatus = localStorage.getItem('isAuthenticated') === 'true';\n    setIsAuthenticated(authStatus);\n    setIsLoading(false);\n\n    // Log for debugging\n    console.log(\"Auth check result:\", authStatus);\n  }, []);\n\n  // Show loading indicator while checking authentication\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-loading\",\n      children: \"Checking authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login page if not authenticated\n  if (!isAuthenticated) {\n    console.log(\"Not authenticated, redirecting to:\", redirectPath);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render children if authenticated\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"6M0T6wddrmS10OcFc8VlSqW6jTc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","redirectPath","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","authStatus","localStorage","getItem","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/infinity-react/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  redirectPath?: string;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \r\n  children, \r\n  redirectPath = '/admin-login' \r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    // Check authentication status from localStorage\r\n    const authStatus = localStorage.getItem('isAuthenticated') === 'true';\r\n    setIsAuthenticated(authStatus);\r\n    setIsLoading(false);\r\n    \r\n    // Log for debugging\r\n    console.log(\"Auth check result:\", authStatus);\r\n  }, []);\r\n  \r\n  // Show loading indicator while checking authentication\r\n  if (isLoading) {\r\n    return <div className=\"admin-loading\">Checking authentication...</div>;\r\n  }\r\n  \r\n  // Redirect to login page if not authenticated\r\n  if (!isAuthenticated) {\r\n    console.log(\"Not authenticated, redirecting to:\", redirectPath);\r\n    return <Navigate to={redirectPath} replace />;\r\n  }\r\n  \r\n  // Render children if authenticated\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO5C,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,QAAQ;EACRC,YAAY,GAAG;AACjB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAiB,IAAI,CAAC;EAC5E,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;IACrEL,kBAAkB,CAACG,UAAU,CAAC;IAC9BD,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACAI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,UAAU,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIF,SAAS,EAAE;IACb,oBAAOT,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAAAZ,QAAA,EAAC;IAA0B;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxE;;EAEA;EACA,IAAI,CAACb,eAAe,EAAE;IACpBO,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEV,YAAY,CAAC;IAC/D,oBAAOL,OAAA,CAACF,QAAQ;MAACuB,EAAE,EAAEhB,YAAa;MAACiB,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;;EAEA;EACA,oBAAOpB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CA9BIH,cAA6C;AAAAoB,EAAA,GAA7CpB,cAA6C;AAgCnD,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}